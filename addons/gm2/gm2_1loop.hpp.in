// ====================================================================
// This file is part of FlexibleSUSY.
//
// FlexibleSUSY is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// FlexibleSUSY is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with FlexibleSUSY.  If not, see
// <http://www.gnu.org/licenses/>.
// ====================================================================

// File generated at @DateAndTime@

#ifndef GM2_1LOOP_H
#define GM2_1LOOP_H

#include "ffunctions.hpp"
#include "wrappers.hpp"
#include "@ModelName@_two_scale_model.hpp"


class DoubleVector;
class DoubleMatrix;

namespace flexiblesusy {

template <class T> class MSSM;
class Two_scale;

namespace gm2 {

/// Fills 2x2 SMuon mixing matrix and mass vector
void FillSMuonMixingMatrix(const MSSM<Two_scale>&, DoubleVector&,
                           DoubleMatrix&);

/**
 * Calculates g-2 at the one-loop level
 *
 * @param model consistent set of tree-level model parameters
 *
 * @return g-2 at the one-loop level
 */
double amuWHnu(const @ModelName@<Two_scale>&);
double amuWHmuL(const @ModelName@<Two_scale>&);
double amuBHmuL(const @ModelName@<Two_scale>&);
double amuBHmuR(const @ModelName@<Two_scale>&);
double amuBmuLmuR(const @ModelName@<Two_scale>&);
double amu1Lapprox(const @ModelName@<Two_scale>&);

ComplexMatrix n_L(const @ModelName@<Two_scale>&);
ComplexMatrix n_R(const @ModelName@<Two_scale>&);

ComplexVector c_L(const @ModelName@<Two_scale>&);
ComplexVector c_R(const @ModelName@<Two_scale>&);

DoubleMatrix x_im(const @ModelName@<Two_scale>&);
DoubleVector x_k(const @ModelName@<Two_scale>&);

double alpha_mu_chi(const @ModelName@<Two_scale>&);
double alpha_mu_cha(const @ModelName@<Two_scale>&);

double calculate_gm2_1loop(const @ModelName@<Two_scale>&);

} // namespace gm2
} // namespace flexiblesusy

#endif
